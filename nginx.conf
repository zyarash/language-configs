server {
    return 404;
}

# ZYARA NGINX CONFIG
server {
    listen          443 ssl;
    server_name     zyara.sh www.zyara.sh;

    location / {
        proxy_pass  http://zyara-sh:3000/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
                                                                            
    include /home/ssl/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /home/ssl/ssl-dhparams.pem; # managed by Certbot
                                                                            
    ssl_certificate /home/ssl/zyara.sh/fullchain.pem; # managed by Certbot
    ssl_certificate_key /home/ssl/zyara.sh/privkey.pem; # managed by Certbot
}

server {
    listen          80;
    server_name     zyara.sh www.zyara.sh;

    if ($host = zyara.sh) {
        return 301 https://$host$request_uri;
    }
    if ($host = www.zyara.sh) {
        return 301 https://$host$request_uri;
    }

    return 404;
}


# HALCYON NGINX CONFIG
server {
    listen          443 ssl;
    server_name     halcyon.fm www.halcyon.fm;

    location / {
        proxy_pass  http://halcyon:3000/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    include /home/ssl/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /home/ssl/ssl-dhparams.pem; # managed by Certbot

    ssl_certificate /home/ssl/halcyon/fullchain.pem; # managed by Certbot
    ssl_certificate_key /home/ssl/halcyon/privkey.pem; # managed by Certbot

}

server {
    listen          80;
    server_name     halcyon.fm www.halcyon.fm;

    if ($host = halcyon.fm) {
        return 301 https://$host$request_uri;
    }
    if ($host = www.halcyon.fm) {
        return 301 https://$host$request_uri;
    }

    return 404;
}


# SQRWAV NGINX CONFIG
server {
    listen          80;
    server_name     localhost;

    location / {
        proxy_pass  http://sqrwav:3000/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}
